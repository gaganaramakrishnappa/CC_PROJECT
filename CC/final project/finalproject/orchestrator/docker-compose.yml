version: '3.1'

services:
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    restart: on-failure
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181

  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"

  orchestrator:
    build:
      context: .
      dockerfile: Dockerfile 
    container_name: orchestrator
    command: sh -c "sleep 30 && python orchestrator.py"
    volumes:
    - .:/code
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker
    links:
    - rabbitmq
    - zookeeper
    depends_on:
    - rabbitmq
    - zookeeper
    restart: always
    expose:
      - "80"
    ports:
      - 80:80
  master:
    build:
      context: .
      dockerfile: Dockerfile 
    container_name: master
    command: sh -c "sleep 35 && python master.py"
    volumes:
    - .:/code
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker
    links:
    - rabbitmq
    - zookeeper
    depends_on:
    - rabbitmq
    - zookeeper
    restart: on-failure

  slave:
    build:
      context: .
      dockerfile: Dockerfile 
    command: sh -c "sleep 40 && python slave.py"
    volumes:
    - .:/code
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker   
    links:
    - rabbitmq
    - zookeeper
    - master
    depends_on:
    - rabbitmq
    - zookeeper
    - master
    restart: on-failure
    



  


 